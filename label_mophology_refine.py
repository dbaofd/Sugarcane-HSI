"""
Some semantic labels generated by the SVM model are not good. Therefore, we need to apply
morphology operations to improve these labels.

Parameters need change:
1) LABEL_PATH
2) SAVING_PATH
3) target_dirs you may need to change
"""
import numpy as np
from PIL import Image
import os
from skimage import morphology
HEIGHT=1088
WIDTH=2048
BAND=161

LABEL_PATH='E:\Sugarcane_Dataset_Label\Apr22' # The folder of target sugarcane labels
SAVING_PATH='E:\Sugarcane_Dataset_Label\Apr22_improved' # The folder for saving improved labels.

def morphology_operation(m):#must make sure background is 0
    """
    Remove small objects in sugarcane labels.
    @param m: 2d label
    @return: the improved label
    """
    #display_label(m, "Before")
    m=morphology.closing(m)
    processed_1 = morphology.remove_small_holes(m.astype(bool), area_threshold=3, connectivity=1)
    mask_x, mask_y = np.where(processed_1 == 1)
    m[mask_x, mask_y] = 1
    processed_2 = morphology.remove_small_objects(m.astype(bool), min_size=500, connectivity=1).astype(int)
    # black out pixels
    mask_x, mask_y = np.where(processed_2 == 0)
    m[mask_x, mask_y] = 0
    return m

label_dir_list = []
label_file_list = []
count = 0
# The target label folder should contains multiple subfolders in which
# contain the sugarcane labels of corresponding variety.
for (root, dirs, files) in os.walk(LABEL_PATH, topdown=True):
    if len(dirs) != 0:
        label_dir_list = dirs
    if count > 0:
        li = []
        for i in files:
            li.append(i)
        label_file_list.append(li)
    count += 1

# Sometimes not all the labels need to be improved, only subfolders that contain bad labels will be added to the target folder list.
target_dirs=["CP29-116","CP29-116_c","Nco310","Nco310_c","Q44","Q44_c","Q68",
             "Q68_c","Q78","Q78_c","Q82","Q82_c","Q124","Q124_c","Q171","Q171_c",
             "Q205","Q205_c","Q208","Q208_c"]


for i in range(len(label_dir_list)):#len(dir_list)
    if label_dir_list[i] in target_dirs:
        print("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
        print(label_dir_list[i])
        for j in range(len(label_file_list[i])):#len(file_list[i])
            os.chdir(LABEL_PATH)
            label_path = label_dir_list[i] + "/" + label_file_list[i][j]
            print(label_path)
            label = np.array(Image.open(label_path,'r'))[:,:,0].astype(np.int32)
            label[label > 1] = 1 # Now 'label' is actually the binary label.
            label=morphology_operation(label)
            new_label = np.zeros((HEIGHT, WIDTH, 3))
            for k in range(HEIGHT):
                for t in range(WIDTH):
                    if label[k][t] == 1:
                        new_label[k][t][0] = 128
            rescale_im = (255.0 / new_label.max() * (new_label - new_label.min())).astype(np.uint8)
            im2 = Image.fromarray(rescale_im)
            os.chdir(SAVING_PATH)
            im2.save(label_dir_list[i] + "/" + label_file_list[i][j])



